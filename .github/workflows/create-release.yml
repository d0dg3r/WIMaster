name: Create Release with Zip

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual trigger

jobs:
  build-setup-exe:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET Framework
      uses: microsoft/setup-msbuild@v1.1
      with:
        vs-version: latest
    
    - name: Build Setup.exe
      run: |
        # Icon parameter if available
        $IconParam = ""
        if (Test-Path "WIMaster_Ico.ico") {
          $IconParam = '/win32icon:"WIMaster_Ico.ico"'
          Write-Host "✅ Using icon: WIMaster_Ico.ico"
        }
        
        # Compile Setup.exe from build-tools directory
        $Args = @(
          "/target:winexe",
          "/platform:anycpu", 
          "/optimize+",
          "/reference:System.Windows.Forms.dll",
          "/reference:Microsoft.Win32.Registry.dll",
          "/out:Setup.exe",
          "build-tools/WIMaster-Setup.cs"
        )
        
        if ($IconParam) {
          $Args = @($IconParam) + $Args
        }
        
        Write-Host "🔨 Compiling Setup.exe for release..."
        & csc @Args
        
        if ($LASTEXITCODE -eq 0) {
          Write-Host "✅ Setup.exe successfully compiled!"
          $FileInfo = Get-Item "Setup.exe"
          Write-Host "📁 File size: $($FileInfo.Length) bytes"
        } else {
          Write-Error "❌ Compilation failed"
          exit 1
        }
      shell: pwsh
      
    - name: Upload Setup.exe artifact
      uses: actions/upload-artifact@v4
      with:
        name: setup-exe
        path: Setup.exe
        retention-days: 1

  create-release:
    runs-on: ubuntu-latest
    needs: build-setup-exe
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Setup.exe
      uses: actions/download-artifact@v4
      with:
        name: setup-exe
        path: .
      
    - name: Verify Setup.exe
      run: |
        if [ -f "Setup.exe" ]; then
          echo "✅ Setup.exe downloaded successfully"
          ls -la Setup.exe
        else
          echo "❌ Setup.exe not found!"
          exit 1
        fi
      
    - name: Create release zip
      run: |
        # Create a temporary directory for the release files
        mkdir -p release-temp
        
        # Copy all files except .git, .github, and other unnecessary files
        rsync -av --exclude='.git' \
                  --exclude='.github' \
                  --exclude='*.log' \
                  --exclude='*.tmp' \
                  --exclude='.DS_Store' \
                  --exclude='Thumbs.db' \
                  ./ release-temp/
        
        # Create the zip file
        cd release-temp
        zip -r ../WIMaster-release.zip .
        cd ..
        
        # Verify zip was created
        ls -la WIMaster-release.zip
    
    - name: Get tag name
      id: tag
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "tag_name=manual-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
        else
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag_name }}
        name: WIMaster ${{ steps.tag.outputs.tag_name }}
        body: |
          ## WIMaster Release ${{ steps.tag.outputs.tag_name }}
          
          This release contains all WIMaster files packaged for distribution with the new Setup.exe!
          
          ### What's Included:
          - **Setup.exe** - New Windows executable with automatic UAC elevation
          - All batch and PowerShell scripts
          - Configuration files and templates  
          - Documentation files
          - Utility executables
          
          ### Installation (Recommended):
          1. Download the WIMaster-release.zip file
          2. Extract to your desired location
          3. **Run Setup.exe** (automatically requests admin rights)
          
          ### Alternative Installation:
          - Run WIMaster-Setup.bat manually "as administrator"
          
          ### New Features:
          - ✅ **Setup.exe** - No more manual "Run as Administrator" required
          - ✅ Automatic UAC elevation
          - ✅ Enhanced error handling
          - ✅ System requirements validation
        files: |
          WIMaster-release.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ github.token }}
